// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique @db.VarChar(10)
  email       String    @unique
  firstName   String
  lastName    String 
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  profile     Profile?
  post        Post[]
  comment     Comment[]
}

model Profile {
  id                  Int       @id @default(autoincrement())
  user                User      @relation(fields: [userId], references: [id])
  userId              Int
  profilePictureURL   String
  biography           String    @db.VarChar(120)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model Post {
  id                  Int       @id @default(autoincrement())
  user                User      @relation(fields: [userId], references: [id])
  userId              Int
  title               String    @db.VarChar(150)
  content             String
  published           Boolean   @default(false)    
  pictureURL          String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  comment             Comment[]
}

model Comment {
  id                  Int       @id @default(autoincrement())
  user                User      @relation(fields: [userId], references: [id])
  userId              Int
  post                Post      @relation(fields: [postId], references: [id])
  postId              Int
  content             String    @db.VarChar(250)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  replyToId           Int?
  comment             Comment?  @relation("CommentComments", fields: [replyToId], references: [id])
  replies             Comment[] @relation("CommentComments")
}


